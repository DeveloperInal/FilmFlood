version: '3.8'

volumes:
  admin-data:
  redis_data:

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_HOST=45.89.26.183
      - REDIS_PORT:=6379
      - REDIS_DB=1
    volumes:
      - redis_data:/data  

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl/:/etc/nginx/ssl/
    depends_on: 
    - redis
    - postgres     

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - DATABASE_URL=postgresql://postgres:inal_2411@45.89.26.183:5432/filmflood
      - POSTGRES_PASSWORD=inal_2411
    volumes:
      - admin-data:/var/lib/postgresql/data

  fastapi:
    build:
      context: ./backend-fastapi/
      dockerfile: Dockerfile
    container_name: fastapi
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
      - nginx
      - nestjs
      - nextjs

  nestjs:
    build:
      context: ./backend-nestjs/
      dockerfile: Dockerfile
    container_name: nestjs   
    ports:
      - "4200:4200"
    depends_on:
      - redis
      - postgres
      - nginx
    environment:
      - NODE_ENV=production node dist/main.js
      - DATABASE_URL=postgresql://postgres:inal_2411@45.89.26.183:5432/filmflood
      - AWS_ACCESS_KEY=f280aec5d0cf4e258fcdefbefe5321ac
      - AWS_SECRET_ACCESS_KEY=3cefa4cd7b3e4350bc3d8bc9b146a062
      - AWS_ENDPOINT=https://s3.ru-1.storage.selcloud.ru

  nextjs:
      build:
        context: ./frontend-nextjs/
        dockerfile: Dockerfile
      container_name: nextjs
      ports:
      - "3000:3000"
      environment:
        - NODE_ENV=production
